/**
 * Swagger Petstore
 * A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NewPet model module.
 * @module model/NewPet
 * @version 1.0.0
 */
class NewPet {
    /**
     * Constructs a new <code>NewPet</code>.
     * @alias module:model/NewPet
     * @param name {String} 
     */
    constructor(name) { 
        
        NewPet.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>NewPet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NewPet} obj Optional instance to populate.
     * @return {module:model/NewPet} The populated <code>NewPet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NewPet();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} name
 */
NewPet.prototype['name'] = undefined;

/**
 * @member {String} tag
 */
NewPet.prototype['tag'] = undefined;






export default NewPet;

